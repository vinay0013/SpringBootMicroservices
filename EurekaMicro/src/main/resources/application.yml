server:
  port: 5007
eureka:
  instance:
    hostname: eureka
  client:
    fetch-registry: false
    register-with-eureka: false
    
---
  
spring:
  profiles: eurekaone
  
server:
  port: 5002
eureka:
  instance:
    hostname: eureka-primary
    appname: eone
  client:
    fetch-registry: true
    register-with-eureka: false
    serviceUrl:
      defaultZone: http://eureka-secondary:5003/eureka,http://eureka-tertiary:5004/eureka
      
---
  
spring:
  profiles: eurekatwo
  
server:
  port: 5003
eureka:
  instance:
    hostname: eureka-secondary
    appname: etwo
  client:
    fetch-registry: true
    register-with-eureka: false
    serviceUrl:
      defaultZone: http://eureka-primary:5002/eureka,http://eureka-tertiary:5004/eureka
      
---
  
spring:
  profiles: eurekathree
  
server:
  port: 5004
eureka:
  instance:
    hostname: eureka-tertiary
    appname: ethree
  client:
    fetch-registry: true
    register-with-eureka: false
    serviceUrl:
      defaultZone: http://eureka-primary:5002/eureka,http://eureka-secondary:5003/eureka
      
---
  
spring:
  profiles: eurekapcfone
  
server:
  port: 5007
eureka:
  instance:
    hostname: eureka-tertiary
    appname: ethree
  client:
    fetch-registry: true
    register-with-eureka: false
    serviceUrl:
      defaultZone: ${vcap.services.eureka.credentials.url2} 
---
  
spring:
  profiles: eurekapcftwo
  cloud:
    services:
      registrationMethod: route

  security:
    basic:
      enabled: false
  
server:
  port: 5008
eureka:
  instance:
    hostname: eureka-tertiary
    appname: ethree
  client:
    fetch-registry: true
    register-with-eureka: false
    serviceUrl:
      defaultZone: ${vcap.services.eureka.credentials.url1} 